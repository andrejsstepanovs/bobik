---
prompts:
  default: system_prompt.md
  code: /full_path_to/code_prompt.md
  # private: /full_path_to/private_prompt.txt
history:
  # enable to store all questions and answers to file. Always appends (for now).
  enabled: false
  file: /full_path_to/my_history.txt
agent:
  prompts:
    - default
    # - private
  temperature: 0
  name: Bobik
  max_tries: 3
  sleep_seconds_between_tries: 2
  agent_type: conversational-react-description
  max_iterations: 4
  tools_enabled: true
phrases:
  exit: ["q", "exit", "quit"]
  with_tools:
    - agent
    - tools
    - with_tools
    - with-tools
  no_tools:
    - simple
    - llm
    - no-tools
    - no_tools
    - no-agent
    - no_agent
  run_once:
    - once
  verbose:
    - verbose
  quiet:
    - quiet
  clear_memory:
    - new
    - forget
pre_parsers:
  # clipboard tool will add your active clipboard text on top of the question. Make sure word `clipboard` is part of question for this to happen.
  # example question: "Summarize my clipboard"
  clipboard: { enabled: true }
  # each time time, and other time related words will be used, time will be added. This can be not what you want for some, specific cases. For example, see `code` model that is defined in this example.
  # There using this pre-parser will not be ideal, as we would send to LLM something not related to code.
  time: { enabled: true }
  # each time file or code is mentioned together with path to file. If file is found, it will be added to question as extra context.
  file: { enabled: true }
  # embeds image to request. This is not working now! It is here for future use.
  image: { enabled: false }
tools:
  # enable them one by one while checking that everything works. Agent is able to use multiple tools before getting to final answer.
  wttr_weather: { enabled: true }
  wikipedia: { enabled: true }
  clear_memory: { enabled: true }
  date_time_tool: { enabled: true }
  input_switch: { enabled: true }
  available_models: { enabled: true }
  change_model: { enabled: true }
  end_conversation: { enabled: true }
  enable_disable_tools: { enabled: true }
  output_switch: { enabled: true }
  bing_search: { enabled: false }
  bing_news: { enabled: false }
  google_search: { enabled: false }
  wolfram_alpha: { enabled: false }
  ics_calendar:
    enabled: false
    config_file: /full_path_to/my_calendar.yaml
user:
  location: Germany, Berlin
  name: Master
  # timezone: UTC # optional
models:
  # EXTERNAL LLM SERVICES
  groq:
    provider: groq
    model: llama3-70b-8192
    synonyms: ["llama 70", "fastest", "free"]
  gpt3:
    provider: openai
    model: gpt-3.5-turbo
    temperature: 1.9
    synonyms: ["gpt 3", "gpt-3"]
  gpt4o:
    provider: openai
    model: gpt-4o
    synonyms: ["gpt 4o", "gpt 4 o", "newest", "latest"]
  gpt4:
    provider: openai
    model: gpt-4
    synonyms: ["gpt 4", "gpt-4"]
  mistral:
    provider: mistral
    model: mistral-large-latest
    # specific use case when we dont want our agent to be chat bot.
    agent_type: zero-shot-react-description
    synonyms: ["mixtral"]
  # check if gemini is allowed in your country.
  google:
    provider: google
    model: gemini-1.5-flash-latest
    synonyms: ["gemini"]

  # CUSTOM MODEL EXAMPLE
  code:
    # useful for single runs with no tool (no agent) functionality enabled. This will result in much faster boot and answers.
    # cool example that you can plug into bash script loop:
    # cat my_code.py > computer.py once quiet code light refactor following code > my_code.py
    # "code" <- this model definition (uses mistral with no tools + special code prompt)
    provider: mistral
    #model: open-mixtral-8x22b
    model: codestral-latest
    # set your custom prompt. needs to be defined on top.
    prompts:
      - code

  # LOCAL PROVIDERS setup example
  ollama:
    provider: ollama
    model: nexusraven:latest
    synonyms: ["private", "secure"]
  lmstudio:
    provider: lm_studio
    # model value is not needed, but code requires something.
    model: current
    synonyms: ["local"]
  my_company:
    provider: openai_custom
    model: bedrock/mistral.mistral-large-2402-v1:0
    base_url: http://localhost:1234
    synonyms: ["local"]

  # OTHER PRIVATE PROVIDERS
  runpod: # Set runpod api key env var, then Start Serverless vLLM
    provider: runpod
    model: openchat/openchat-3.5-1210
    endpoint_id: vllm-xxxxxxxxxxxxxx

io_input:
  text:
    provider: text
  listen:
    synonyms: ["ispeak"]
    provider: deepgram
    model: nova-2
    punctuate: true
    language: en-US
    encoding: linear16
    channels: 1
    sample_rate: 16000
    endpointing: 300
    smart_format: true
io_output:
  write:
    provider: text
  speak:
    synonyms: ["talk"]
    provider: deepgram
    performance: some
    encoding: linear16
    sample_rate: 24000
    model: aura-helios-en

tasks:
  news:
    - get_news trendingtopics
    - get_news europe
    - mistral-7b-llm         # cheap
    - llm
    - Use last conversation context and list news events that are not related to sport.
  calendar-today:
    - calendar_events today  # manual tool call
    - mistral-7b-llm         # cheap
    - llm
    - >
      Organize given calendar events by time, 
      show calendar name and make sure to mark important events.
  weather-today:
    - weather today          # manual tool call
    - mistral-7b-llm         # cheap
    - llm
    - > 
      What will be weather forecast today? 
      Answer with the list of times and short summary.
      Exclude forecast that was in the past.
      Temperature and rain is important.
  myday:
    - news                   # internal tool call
    - calendar-today         # internal tool call
    - weather-today          # internal tool call
    - mistral-7b-llm         # cheap
    - llm
    - Summarize latest news, calendar events and weather forecast for today.
  tomorrow:
    - quiet
    - weather today          # manual tool call
    - calendar_events today  # manual tool call
    - mistral-7b-llm         # cheap
    - llm
    - >
      List all Tomorrow calendar events combined with Tomorrow weather forecast.
      Emphasize important calendar events. 
      Print them in the list format. 
      Also mention if it is good time to go for a jog.
